{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NFTReported",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "claimRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "NftDetailsArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_TokenID",
          "type": "uint256"
        }
      ],
      "name": "addNFTInfo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerToContractAddressToTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_TokenID",
          "type": "uint256"
        }
      ],
      "name": "removeClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reportingCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cost",
          "type": "uint256"
        }
      ],
      "name": "setCost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userTotalNftStolen",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "victimToAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
    "2": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "3": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "4": "contracts/NFTinfo.sol"
  },
  "ast": {
    "absolutePath": "contracts/NFTinfo.sol",
    "exportedSymbols": {
      "Address": [
        662
      ],
      "Context": [
        684
      ],
      "NFTInfo": [
        222
      ],
      "Ownable": [
        327
      ],
      "ReentrancyGuard": [
        367
      ]
    },
    "id": 223,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:4"
      },
      {
        "absolutePath": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 223,
        "sourceUnit": 663,
        "src": "66:51:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 223,
        "sourceUnit": 328,
        "src": "122:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 223,
        "sourceUnit": 368,
        "src": "179:62:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nameLocations": [
                "267:7:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 327,
              "src": "267:7:4"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "267:7:4"
          },
          {
            "baseName": {
              "id": 7,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "276:15:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 367,
              "src": "276:15:4"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "276:15:4"
          }
        ],
        "canonicalName": "NFTInfo",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 222,
        "linearizedBaseContracts": [
          222,
          367,
          327,
          684
        ],
        "name": "NFTInfo",
        "nameLocation": "256:7:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "0f353281",
            "id": 14,
            "mutability": "mutable",
            "name": "ownerToContractAddressToTokenId",
            "nameLocation": "355:31:4",
            "nodeType": "VariableDeclaration",
            "scope": 222,
            "src": "299:87:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 13,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "307:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "299:48:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 12,
                "keyType": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "327:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "318:28:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 11,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "338:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46c7c8c0",
            "id": 18,
            "mutability": "mutable",
            "name": "userTotalNftStolen",
            "nameLocation": "428:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 222,
            "src": "392:54:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 15,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "401:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "392:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 16,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "412:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "trackingFeesPaid",
            "nameLocation": "520:16:4",
            "nodeType": "VariableDeclaration",
            "scope": 222,
            "src": "452:84:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "460:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "452:67:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
              },
              "valueType": {
                "id": 24,
                "keyType": {
                  "id": 20,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "479:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "471:47:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                },
                "valueType": {
                  "id": 23,
                  "keyType": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "490:27:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "valueType": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "448ddc4a904fc719ce9b21abbbb90b051eac4c3e79e44c8e60ecd59add866603",
            "id": 32,
            "name": "NFTReported",
            "nameLocation": "548:11:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "568:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "560:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "593:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "585:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "559:42:4"
            },
            "src": "542:60:4"
          },
          {
            "anonymous": false,
            "eventSelector": "1c44899bef38867f8f6b8183ed30a821f5f247b92841272d5ee14507047747b2",
            "id": 38,
            "name": "claimRemoved",
            "nameLocation": "613:12:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "634:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "626:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "659:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "651:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "625:42:4"
            },
            "src": "607:61:4"
          },
          {
            "constant": false,
            "functionSelector": "706ef6cc",
            "id": 40,
            "mutability": "mutable",
            "name": "reportingCost",
            "nameLocation": "690:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 222,
            "src": "675:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "675:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "NFTInfo.NftDetails",
            "id": 45,
            "members": [
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "contractAddress",
                "nameLocation": "746:15:4",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "738:23:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 41,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "738:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "779:7:4",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "771:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "771:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NftDetails",
            "nameLocation": "717:10:4",
            "nodeType": "StructDefinition",
            "scope": 222,
            "src": "710:83:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4280411e",
            "id": 51,
            "mutability": "mutable",
            "name": "victimToAssets",
            "nameLocation": "840:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 222,
            "src": "799:55:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct NFTInfo.NftDetails[])"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "808:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "799:33:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct NFTInfo.NftDetails[])"
              },
              "valueType": {
                "baseType": {
                  "id": 48,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 47,
                    "name": "NftDetails",
                    "nameLocations": [
                      "819:10:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 45,
                    "src": "819:10:4"
                  },
                  "referencedDeclaration": 45,
                  "src": "819:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NftDetails_$45_storage_ptr",
                    "typeString": "struct NFTInfo.NftDetails"
                  }
                },
                "id": 49,
                "nodeType": "ArrayTypeName",
                "src": "819:12:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage_ptr",
                  "typeString": "struct NFTInfo.NftDetails[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c65cf54",
            "id": 55,
            "mutability": "mutable",
            "name": "NftDetailsArray",
            "nameLocation": "881:15:4",
            "nodeType": "VariableDeclaration",
            "scope": 222,
            "src": "861:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage",
              "typeString": "struct NFTInfo.NftDetails[]"
            },
            "typeName": {
              "baseType": {
                "id": 53,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 52,
                  "name": "NftDetails",
                  "nameLocations": [
                    "861:10:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45,
                  "src": "861:10:4"
                },
                "referencedDeclaration": 45,
                "src": "861:10:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NftDetails_$45_storage_ptr",
                  "typeString": "struct NFTInfo.NftDetails"
                }
              },
              "id": 54,
              "nodeType": "ArrayTypeName",
              "src": "861:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage_ptr",
                "typeString": "struct NFTInfo.NftDetails[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "982:521:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 63,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1000:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1004:5:4",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1000:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 65,
                          "name": "reportingCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1013:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1000:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e647321",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1028:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686",
                          "typeString": "literal_string \"Insufficient funds!\""
                        },
                        "value": "Insufficient funds!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686",
                          "typeString": "literal_string \"Insufficient funds!\""
                        }
                      ],
                      "id": 62,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "992:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "992:58:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "992:58:4"
                },
                {
                  "expression": {
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 70,
                            "name": "trackingFeesPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1060:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
                            }
                          },
                          "id": 75,
                          "indexExpression": {
                            "expression": {
                              "id": 71,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1077:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1081:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1077:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1060:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 76,
                        "indexExpression": {
                          "id": 73,
                          "name": "_contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1089:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1060:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 77,
                      "indexExpression": {
                        "id": 74,
                        "name": "_TokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1107:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1060:56:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 78,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1119:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1123:5:4",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1119:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1060:68:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:68:4"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 82,
                          "name": "ownerToContractAddressToTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1138:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 86,
                        "indexExpression": {
                          "expression": {
                            "id": 83,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1170:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1174:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1170:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1138:43:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 87,
                      "indexExpression": {
                        "id": 85,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1182:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1138:61:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 88,
                      "name": "_TokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1202:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1138:72:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 97,
                            "name": "_contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1264:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 98,
                            "name": "_TokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1282:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 96,
                          "name": "NftDetails",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1253:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_NftDetails_$45_storage_ptr_$",
                            "typeString": "type(struct NFTInfo.NftDetails storage pointer)"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1253:38:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftDetails_$45_memory_ptr",
                          "typeString": "struct NFTInfo.NftDetails memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NftDetails_$45_memory_ptr",
                          "typeString": "struct NFTInfo.NftDetails memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 91,
                          "name": "victimToAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "1221:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct NFTInfo.NftDetails storage ref[] storage ref)"
                          }
                        },
                        "id": 94,
                        "indexExpression": {
                          "expression": {
                            "id": 92,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1236:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1240:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1236:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1221:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage",
                          "typeString": "struct NFTInfo.NftDetails storage ref[] storage ref"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1248:4:4",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1221:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage_ptr_$_t_struct$_NftDetails_$45_storage_$returns$__$bound_to$_t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct NFTInfo.NftDetails storage ref[] storage pointer,struct NFTInfo.NftDetails storage ref)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1221:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1221:71:4"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102,
                        "name": "userTotalNftStolen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1303:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 105,
                      "indexExpression": {
                        "expression": {
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1322:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1326:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1322:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1303:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 106,
                          "name": "userTotalNftStolen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1336:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 109,
                        "indexExpression": {
                          "expression": {
                            "id": 107,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1355:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1359:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1355:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1336:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1369:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1336:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1303:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1303:67:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 118,
                            "name": "_contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1413:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 119,
                            "name": "_TokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1431:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 117,
                          "name": "NftDetails",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1402:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_NftDetails_$45_storage_ptr_$",
                            "typeString": "type(struct NFTInfo.NftDetails storage pointer)"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1402:38:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NftDetails_$45_memory_ptr",
                          "typeString": "struct NFTInfo.NftDetails memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NftDetails_$45_memory_ptr",
                          "typeString": "struct NFTInfo.NftDetails memory"
                        }
                      ],
                      "expression": {
                        "id": 114,
                        "name": "NftDetailsArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1381:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage",
                          "typeString": "struct NFTInfo.NftDetails storage ref[] storage ref"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1397:4:4",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1381:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage_ptr_$_t_struct$_NftDetails_$45_storage_$returns$__$bound_to$_t_array$_t_struct$_NftDetails_$45_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct NFTInfo.NftDetails storage ref[] storage pointer,struct NFTInfo.NftDetails storage ref)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1381:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:60:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 124,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1468:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 125,
                        "name": "_TokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1486:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 123,
                      "name": "NFTReported",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1456:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1456:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "EmitStatement",
                  "src": "1451:44:4"
                }
              ]
            },
            "functionSelector": "d810d589",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNFTInfo",
            "nameLocation": "912:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "931:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "923:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_TokenID",
                  "nameLocation": "957:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "949:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "922:44:4"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "982:0:4"
            },
            "scope": 222,
            "src": "903:600:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "1595:520:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 139,
                              "name": "ownerToContractAddressToTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "1613:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 142,
                            "indexExpression": {
                              "expression": {
                                "id": 140,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1645:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1649:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1645:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1613:43:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 144,
                          "indexExpression": {
                            "id": 143,
                            "name": "_contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "1657:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1613:61:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 145,
                          "name": "_TokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "1678:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1613:73:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207265706f72746564204e465473",
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1688:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eabe31e0da6cd8e8484855ff359c55e03386dac688c047fca17cbfce495035ac",
                          "typeString": "literal_string \"No reported NFTs\""
                        },
                        "value": "No reported NFTs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eabe31e0da6cd8e8484855ff359c55e03386dac688c047fca17cbfce495035ac",
                          "typeString": "literal_string \"No reported NFTs\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1605:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1605:102:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1605:102:4"
                },
                {
                  "assignments": [
                    151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1725:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 208,
                      "src": "1717:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 150,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1717:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 164,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 152,
                              "name": "trackingFeesPaid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "1735:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
                              }
                            },
                            "id": 155,
                            "indexExpression": {
                              "expression": {
                                "id": 153,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1752:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1756:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1752:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1735:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 157,
                          "indexExpression": {
                            "id": 156,
                            "name": "_contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "1764:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1735:46:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 159,
                        "indexExpression": {
                          "id": 158,
                          "name": "_TokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "1782:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1735:56:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3930",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1794:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_90_by_1",
                          "typeString": "int_const 90"
                        },
                        "value": "90"
                      },
                      "src": "1735:61:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1799:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1735:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1717:85:4"
                },
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 165,
                            "name": "trackingFeesPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1812:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
                            }
                          },
                          "id": 170,
                          "indexExpression": {
                            "expression": {
                              "id": 166,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1829:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1833:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1829:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1812:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 171,
                        "indexExpression": {
                          "id": 168,
                          "name": "_contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "1841:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1812:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 172,
                      "indexExpression": {
                        "id": 169,
                        "name": "_TokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "1859:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1812:56:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1871:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1812:60:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "1812:60:4"
                },
                {
                  "assignments": [
                    177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 177,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "1898:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 208,
                      "src": "1882:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 176,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1882:15:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 183,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1918:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1922:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1918:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1910:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 178,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1910:8:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1910:19:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1882:47:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 187,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "1957:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 188,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "1968:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 184,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "1939:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$662_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1947:9:4",
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 419,
                      "src": "1939:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:37:4"
                },
                {
                  "expression": {
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 191,
                        "name": "userTotalNftStolen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1986:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 194,
                      "indexExpression": {
                        "expression": {
                          "id": 192,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2005:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2009:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2005:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1986:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 195,
                          "name": "userTotalNftStolen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "2019:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 198,
                        "indexExpression": {
                          "expression": {
                            "id": 196,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2038:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2042:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2038:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2019:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2052:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2019:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1986:67:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:67:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 204,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "2081:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 205,
                        "name": "_TokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2099:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 203,
                      "name": "claimRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2068:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "EmitStatement",
                  "src": "2063:45:4"
                }
              ]
            },
            "functionSelector": "16aedfdb",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 136,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 135,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1582:12:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 366,
                  "src": "1582:12:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1582:12:4"
              }
            ],
            "name": "removeClaim",
            "nameLocation": "1519:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "1539:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "1531:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_TokenID",
                  "nameLocation": "1565:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "1557:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1530:44:4"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1595:0:4"
            },
            "scope": 222,
            "src": "1510:605:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "2170:38:4",
              "statements": [
                {
                  "expression": {
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 216,
                      "name": "reportingCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "2180:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 217,
                      "name": "_cost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "2196:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2180:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:21:4"
                }
              ]
            },
            "functionSelector": "44a0d68a",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 214,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 213,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2160:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 269,
                  "src": "2160:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2160:9:4"
              }
            ],
            "name": "setCost",
            "nameLocation": "2130:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "_cost",
                  "nameLocation": "2146:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2138:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2137:15:4"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2170:0:4"
            },
            "scope": 222,
            "src": "2121:87:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 223,
        "src": "247:1965:4",
        "usedErrors": []
      }
    ],
    "src": "37:2175:4"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a4d806100826000396000f3fe60806040526004361061009c5760003560e01c80636c65cf54116100645780636c65cf541461019a578063706ef6cc146101ba578063715018a6146101d05780638da5cb5b146101e5578063d810d5891461020d578063f2fde38b1461022057600080fd5b80630f353281146100a157806316aedfdb146100ec5780634280411e1461010e57806344a0d68a1461014d57806346c7c8c01461016d575b600080fd5b3480156100ad57600080fd5b506100d96100bc3660046108cf565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156100f857600080fd5b5061010c610107366004610902565b610240565b005b34801561011a57600080fd5b5061012e610129366004610902565b6103f9565b604080516001600160a01b0390931683526020830191909152016100e3565b34801561015957600080fd5b5061010c61016836600461092c565b61043f565b34801561017957600080fd5b506100d9610188366004610945565b60036020526000908152604090205481565b3480156101a657600080fd5b5061012e6101b536600461092c565b61046e565b3480156101c657600080fd5b506100d960055481565b3480156101dc57600080fd5b5061010c6104a6565b3480156101f157600080fd5b506000546040516001600160a01b0390911681526020016100e3565b61010c61021b366004610902565b6104dc565b34801561022c57600080fd5b5061010c61023b366004610945565b6106aa565b6002600154036102975760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001819055336000908152602091825260408082206001600160a01b0386168352909252205481146103005760405162461bcd60e51b815260206004820152601060248201526f4e6f207265706f72746564204e46547360801b604482015260640161028e565b3360009081526004602090815260408083206001600160a01b0386168452825280832084845290915281205460649061033a90605a61097d565b610344919061099a565b3360008181526004602090815260408083206001600160a01b0389168452825280832087845290915281205590915061037d8183610745565b33600090815260036020526040902054610399906001906109bc565b336000908152600360209081526040918290209290925580516001600160a01b03871681529182018590527f1c44899bef38867f8f6b8183ed30a821f5f247b92841272d5ee14507047747b2910160405180910390a15050600180555050565b6006602052816000526040600020818154811061041557600080fd5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b6000546001600160a01b031633146104695760405162461bcd60e51b815260040161028e906109cf565b600555565b6007818154811061047e57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b031633146104d05760405162461bcd60e51b815260040161028e906109cf565b6104da6000610863565b565b6005543410156105245760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b604482015260640161028e565b3360008181526004602090815260408083206001600160a01b0387811680865291845282852087865284528285203490558585526002808552838620838752855283862088905586865260068552838620845180860186529384528386018981528154600180820184559289528789209551930290940180546001600160a01b0319169290931691909117825591519082015593835260039091529020546105cb91610a04565b33600090815260036020908152604080832093909355825180840184526001600160a01b0386811680835282840187815260078054600181018255965292517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600290960295860180546001600160a01b031916919093161790915590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68990930192909255825191825281018390527f448ddc4a904fc719ce9b21abbbb90b051eac4c3e79e44c8e60ecd59add866603910160405180910390a15050565b6000546001600160a01b031633146106d45760405162461bcd60e51b815260040161028e906109cf565b6001600160a01b0381166107395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028e565b61074281610863565b50565b804710156107955760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161028e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146107e2576040519150601f19603f3d011682016040523d82523d6000602084013e6107e7565b606091505b505090508061085e5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161028e565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146108ca57600080fd5b919050565b600080604083850312156108e257600080fd5b6108eb836108b3565b91506108f9602084016108b3565b90509250929050565b6000806040838503121561091557600080fd5b61091e836108b3565b946020939093013593505050565b60006020828403121561093e57600080fd5b5035919050565b60006020828403121561095757600080fd5b610960826108b3565b9392505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761099457610994610967565b92915050565b6000826109b757634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561099457610994610967565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b808201808211156109945761099461096756fea26469706673582212204a4a25ff7f62e8696b6c7a9682c3cec639d6ebdb187afc3abc88cccef716b83c64736f6c63430008110033",
  "bytecodeSha1": "ae2efc49de8cc9f92dc97506b40b3d730d6bd03a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "NFTInfo",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "26": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "Address.sendValue": {
          "24": [
            2501,
            2532,
            true
          ],
          "25": [
            2647,
            2654,
            true
          ]
        }
      },
      "3": {},
      "4": {
        "NFTInfo.addNFTInfo": {
          "23": [
            1000,
            1026,
            true
          ]
        },
        "NFTInfo.removeClaim": {
          "22": [
            1613,
            1686,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "20": [
            2378,
            2395
          ],
          "21": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "8": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "16": [
            1998,
            2071
          ],
          "17": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "Address.sendValue": {
          "18": [
            2493,
            2566
          ],
          "19": [
            2639,
            2717
          ]
        }
      },
      "3": {
        "Context._msgSender": {
          "6": [
            712,
            729
          ]
        }
      },
      "4": {
        "NFTInfo.addNFTInfo": {
          "9": [
            992,
            1050
          ],
          "10": [
            1060,
            1128
          ],
          "11": [
            1138,
            1210
          ],
          "12": [
            1221,
            1292
          ],
          "13": [
            1303,
            1370
          ],
          "14": [
            1381,
            1441
          ],
          "15": [
            1451,
            1495
          ]
        },
        "NFTInfo.removeClaim": {
          "1": [
            1605,
            1707
          ],
          "2": [
            1812,
            1872
          ],
          "3": [
            1939,
            1976
          ],
          "4": [
            1986,
            2053
          ],
          "5": [
            2063,
            2108
          ]
        },
        "NFTInfo.setCost": {
          "7": [
            2180,
            2201
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ReentrancyGuard"
  ],
  "deployedBytecode": "60806040526004361061009c5760003560e01c80636c65cf54116100645780636c65cf541461019a578063706ef6cc146101ba578063715018a6146101d05780638da5cb5b146101e5578063d810d5891461020d578063f2fde38b1461022057600080fd5b80630f353281146100a157806316aedfdb146100ec5780634280411e1461010e57806344a0d68a1461014d57806346c7c8c01461016d575b600080fd5b3480156100ad57600080fd5b506100d96100bc3660046108cf565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156100f857600080fd5b5061010c610107366004610902565b610240565b005b34801561011a57600080fd5b5061012e610129366004610902565b6103f9565b604080516001600160a01b0390931683526020830191909152016100e3565b34801561015957600080fd5b5061010c61016836600461092c565b61043f565b34801561017957600080fd5b506100d9610188366004610945565b60036020526000908152604090205481565b3480156101a657600080fd5b5061012e6101b536600461092c565b61046e565b3480156101c657600080fd5b506100d960055481565b3480156101dc57600080fd5b5061010c6104a6565b3480156101f157600080fd5b506000546040516001600160a01b0390911681526020016100e3565b61010c61021b366004610902565b6104dc565b34801561022c57600080fd5b5061010c61023b366004610945565b6106aa565b6002600154036102975760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001819055336000908152602091825260408082206001600160a01b0386168352909252205481146103005760405162461bcd60e51b815260206004820152601060248201526f4e6f207265706f72746564204e46547360801b604482015260640161028e565b3360009081526004602090815260408083206001600160a01b0386168452825280832084845290915281205460649061033a90605a61097d565b610344919061099a565b3360008181526004602090815260408083206001600160a01b0389168452825280832087845290915281205590915061037d8183610745565b33600090815260036020526040902054610399906001906109bc565b336000908152600360209081526040918290209290925580516001600160a01b03871681529182018590527f1c44899bef38867f8f6b8183ed30a821f5f247b92841272d5ee14507047747b2910160405180910390a15050600180555050565b6006602052816000526040600020818154811061041557600080fd5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b6000546001600160a01b031633146104695760405162461bcd60e51b815260040161028e906109cf565b600555565b6007818154811061047e57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b031633146104d05760405162461bcd60e51b815260040161028e906109cf565b6104da6000610863565b565b6005543410156105245760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b604482015260640161028e565b3360008181526004602090815260408083206001600160a01b0387811680865291845282852087865284528285203490558585526002808552838620838752855283862088905586865260068552838620845180860186529384528386018981528154600180820184559289528789209551930290940180546001600160a01b0319169290931691909117825591519082015593835260039091529020546105cb91610a04565b33600090815260036020908152604080832093909355825180840184526001600160a01b0386811680835282840187815260078054600181018255965292517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600290960295860180546001600160a01b031916919093161790915590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68990930192909255825191825281018390527f448ddc4a904fc719ce9b21abbbb90b051eac4c3e79e44c8e60ecd59add866603910160405180910390a15050565b6000546001600160a01b031633146106d45760405162461bcd60e51b815260040161028e906109cf565b6001600160a01b0381166107395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028e565b61074281610863565b50565b804710156107955760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161028e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146107e2576040519150601f19603f3d011682016040523d82523d6000602084013e6107e7565b606091505b505090508061085e5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161028e565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146108ca57600080fd5b919050565b600080604083850312156108e257600080fd5b6108eb836108b3565b91506108f9602084016108b3565b90509250929050565b6000806040838503121561091557600080fd5b61091e836108b3565b946020939093013593505050565b60006020828403121561093e57600080fd5b5035919050565b60006020828403121561095757600080fd5b610960826108b3565b9392505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761099457610994610967565b92915050565b6000826109b757634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561099457610994610967565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b808201808211156109945761099461096756fea26469706673582212204a4a25ff7f62e8696b6c7a9682c3cec639d6ebdb187afc3abc88cccef716b83c64736f6c63430008110033",
  "deployedSourceMap": "247:1965:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;299:87;;;;;;;;;;-1:-1:-1;299:87:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;603:25:5;;;591:2;576:18;299:87:4;;;;;;;;1510:605;;;;;;;;;;-1:-1:-1;1510:605:4;;;;;:::i;:::-;;:::i;:::-;;799:55;;;;;;;;;;-1:-1:-1;799:55:4;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1090:32:5;;;1072:51;;1154:2;1139:18;;1132:34;;;;1045:18;799:55:4;898:274:5;2121:87:4;;;;;;;;;;-1:-1:-1;2121:87:4;;;;;:::i;:::-;;:::i;392:54::-;;;;;;;;;;-1:-1:-1;392:54:4;;;;;:::i;:::-;;;;;;;;;;;;;;861:35;;;;;;;;;;-1:-1:-1;861:35:4;;;;;:::i;:::-;;:::i;675:28::-;;;;;;;;;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;1699:51:5;;1687:2;1672:18;1036:85:0;1553:203:5;903:600:4;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;1510:605:4:-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;1963:2:5;2317:63:1;;;1945:21:5;2002:2;1982:18;;;1975:30;2041:33;2021:18;;;2014:61;2092:18;;2317:63:1;;;;;;;;;1744:1;2455:7;:18;;;1645:10:4::1;1613:43;::::0;;;::::1;::::0;;;;;;;-1:-1:-1;;;;;1613:61:4;::::1;::::0;;;;;;;:73;::::1;1605:102;;;::::0;-1:-1:-1;;;1605:102:4;;2323:2:5;1605:102:4::1;::::0;::::1;2305:21:5::0;2362:2;2342:18;;;2335:30;-1:-1:-1;;;2381:18:5;;;2374:46;2437:18;;1605:102:4::1;2121:340:5::0;1605:102:4::1;1752:10;1717:15;1735:28:::0;;;:16:::1;:28;::::0;;;;;;;-1:-1:-1;;;;;1735:46:4;::::1;::::0;;;;;;;:56;;;;;;;;;1799:3:::1;::::0;1735:61:::1;::::0;1794:2:::1;1735:61;:::i;:::-;:67;;;;:::i;:::-;1829:10;1871:1;1812:28:::0;;;:16:::1;:28;::::0;;;;;;;-1:-1:-1;;;;;1812:46:4;::::1;::::0;;;;;;;:56;;;;;;;;:60;1717:85;;-1:-1:-1;1939:37:4::1;1829:10:::0;1717:85;1939:17:::1;:37::i;:::-;2038:10;2019:30;::::0;;;:18:::1;:30;::::0;;;;;:34:::1;::::0;2052:1:::1;::::0;2019:34:::1;:::i;:::-;2005:10;1986:30;::::0;;;:18:::1;:30;::::0;;;;;;;;:67;;;;2068:40;;-1:-1:-1;;;;;1090:32:5;;1072:51;;1139:18;;;1132:34;;;2068:40:4::1;::::0;1045:18:5;2068:40:4::1;;;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;;1510:605:4:o;799:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;799:55:4;;;;-1:-1:-1;799:55:4;-1:-1:-1;799:55:4;:::o;2121:87::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2180:13:4::1;:21:::0;2121:87::o;861:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;861:35:4;;;;-1:-1:-1;861:35:4;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;903:600:4:-;1013:13;;1000:9;:26;;992:58;;;;-1:-1:-1;;;992:58:4;;3689:2:5;992:58:4;;;3671:21:5;3728:2;3708:18;;;3701:30;-1:-1:-1;;;3747:18:5;;;3740:49;3806:18;;992:58:4;3487:343:5;992:58:4;1077:10;1060:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;1060:46:4;;;;;;;;;;;;:56;;;;;;;;1119:9;1060:68;;1138:43;;;:31;:43;;;;;;:61;;;;;;;;:72;;;1221:26;;;:14;:26;;;;;1253:38;;;;;;;;;;;;;;;;1221:71;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1221:71:4;;;;;;;;;;;;;;;;;1336:30;;;:18;:30;;;;;;:34;;;:::i;:::-;1322:10;1303:30;;;;:18;:30;;;;;;;;:67;;;;1402:38;;;;;;;-1:-1:-1;;;;;1402:38:4;;;;;;;;;;;;1381:15;:60;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1381:60:4;;;;;;;;;;;;;;;;;;;1456:39;;1072:51:5;;;1139:18;;1132:34;;;1456:39:4;;1045:18:5;1456:39:4;;;;;;;903:600;;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4167:2:5;1998:73:0::1;::::0;::::1;4149:21:5::0;4206:2;4186:18;;;4179:30;4245:34;4225:18;;;4218:62;-1:-1:-1;;;4296:18:5;;;4289:36;4342:19;;1998:73:0::1;3965:402:5::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2412:312:2:-;2526:6;2501:21;:31;;2493:73;;;;-1:-1:-1;;;2493:73:2;;4574:2:5;2493:73:2;;;4556:21:5;4613:2;4593:18;;;4586:30;4652:31;4632:18;;;4625:59;4701:18;;2493:73:2;4372:353:5;2493:73:2;2578:12;2596:9;-1:-1:-1;;;;;2596:14:2;2618:6;2596:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:52;;;2647:7;2639:78;;;;-1:-1:-1;;;2639:78:2;;5142:2:5;2639:78:2;;;5124:21:5;5181:2;5161:18;;;5154:30;5220:34;5200:18;;;5193:62;5291:28;5271:18;;;5264:56;5337:19;;2639:78:2;4940:422:5;2639:78:2;2483:241;2412:312;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;639:254::-;707:6;715;768:2;756:9;747:7;743:23;739:32;736:52;;;784:1;781;774:12;736:52;807:29;826:9;807:29;:::i;:::-;797:39;883:2;868:18;;;;855:32;;-1:-1:-1;;;639:254:5:o;1177:180::-;1236:6;1289:2;1277:9;1268:7;1264:23;1260:32;1257:52;;;1305:1;1302;1295:12;1257:52;-1:-1:-1;1328:23:5;;1177:180;-1:-1:-1;1177:180:5:o;1362:186::-;1421:6;1474:2;1462:9;1453:7;1449:23;1445:32;1442:52;;;1490:1;1487;1480:12;1442:52;1513:29;1532:9;1513:29;:::i;:::-;1503:39;1362:186;-1:-1:-1;;;1362:186:5:o;2466:127::-;2527:10;2522:3;2518:20;2515:1;2508:31;2558:4;2555:1;2548:15;2582:4;2579:1;2572:15;2598:168;2671:9;;;2702;;2719:15;;;2713:22;;2699:37;2689:71;;2740:18;;:::i;:::-;2598:168;;;;:::o;2771:217::-;2811:1;2837;2827:132;;2881:10;2876:3;2872:20;2869:1;2862:31;2916:4;2913:1;2906:15;2944:4;2941:1;2934:15;2827:132;-1:-1:-1;2973:9:5;;2771:217::o;2993:128::-;3060:9;;;3081:11;;;3078:37;;;3095:18;;:::i;3126:356::-;3328:2;3310:21;;;3347:18;;;3340:30;3406:34;3401:2;3386:18;;3379:62;3473:2;3458:18;;3126:356::o;3835:125::-;3900:9;;;3921:10;;;3918:36;;;3934:18;;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    247,
    2212
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C65CF54 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x6C65CF54 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x706EF6CC EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xD810D589 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF353281 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x16AEDFDB EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x4280411E EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x44A0D68A EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x46C7C8C0 EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x945 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x4A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x945 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x297 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE SWAP1 SWAP3 MSTORE KECCAK256 SLOAD DUP2 EQ PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F207265706F72746564204E465473 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x64 SWAP1 PUSH2 0x33A SWAP1 PUSH1 0x5A PUSH2 0x97D JUMP JUMPDEST PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x99A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE SWAP1 SWAP2 POP PUSH2 0x37D DUP2 DUP4 PUSH2 0x745 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x399 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x9BC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x1C44899BEF38867F8F6B8183ED30A821F5F247B92841272D5EE14507047747B2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28E SWAP1 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28E SWAP1 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x4DA PUSH1 0x0 PUSH2 0x863 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD CALLVALUE LT ISZERO PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E742066756E647321 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP8 DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 CALLVALUE SWAP1 SSTORE DUP6 DUP6 MSTORE PUSH1 0x2 DUP1 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP4 DUP8 MSTORE DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP9 SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE SWAP4 DUP5 MSTORE DUP4 DUP7 ADD DUP10 DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE SWAP3 DUP10 MSTORE DUP8 DUP10 KECCAK256 SWAP6 MLOAD SWAP4 MUL SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP2 MLOAD SWAP1 DUP3 ADD SSTORE SWAP4 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x5CB SWAP2 PUSH2 0xA04 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP1 DUP4 MSTORE DUP3 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP7 MSTORE SWAP3 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 PUSH1 0x2 SWAP1 SWAP7 MUL SWAP6 DUP7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x448DDC4A904FC719CE9B21ABBBB90B051EAC4C3E79E44C8E60ECD59ADD866603 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28E SWAP1 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28E JUMP JUMPDEST PUSH2 0x742 DUP2 PUSH2 0x863 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8EB DUP4 PUSH2 0x8B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F9 PUSH1 0x20 DUP5 ADD PUSH2 0x8B3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91E DUP4 PUSH2 0x8B3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x960 DUP3 PUSH2 0x8B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x994 JUMPI PUSH2 0x994 PUSH2 0x967 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x994 JUMPI PUSH2 0x994 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x994 JUMPI PUSH2 0x994 PUSH2 0x967 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0x4A 0x25 SELFDESTRUCT PUSH32 0x62E8696B6C7A9682C3CEC639D6EBDB187AFC3ABC88CCCEF716B83C64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        247,
        2212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "LT",
      "path": "4"
    },
    "9": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9C"
    },
    "12": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "SHR",
      "path": "4"
    },
    "19": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "20": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6C65CF54"
    },
    "25": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "GT",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "30": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "31": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6C65CF54"
    },
    "36": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "EQ",
      "path": "4"
    },
    "37": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x19A"
    },
    "40": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "41": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "42": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x706EF6CC"
    },
    "47": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "EQ",
      "path": "4"
    },
    "48": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BA"
    },
    "51": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "52": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "53": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "58": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "EQ",
      "path": "4"
    },
    "59": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D0"
    },
    "62": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "63": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "64": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "69": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "EQ",
      "path": "4"
    },
    "70": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E5"
    },
    "73": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "74": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "75": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xD810D589"
    },
    "80": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "EQ",
      "path": "4"
    },
    "81": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20D"
    },
    "84": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "85": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "86": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "EQ",
      "path": "4"
    },
    "92": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x220"
    },
    "95": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "96": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "REVERT",
      "path": "4"
    },
    "100": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "101": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "102": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF353281"
    },
    "107": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "EQ",
      "path": "4"
    },
    "108": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA1"
    },
    "111": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x16AEDFDB"
    },
    "118": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "EQ",
      "path": "4"
    },
    "119": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC"
    },
    "122": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "123": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "124": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4280411E"
    },
    "129": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "EQ",
      "path": "4"
    },
    "130": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10E"
    },
    "133": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "134": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "135": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x44A0D68A"
    },
    "140": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "EQ",
      "path": "4"
    },
    "141": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14D"
    },
    "144": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "145": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "146": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x46C7C8C0"
    },
    "151": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "EQ",
      "path": "4"
    },
    "152": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16D"
    },
    "155": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "156": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "157": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "159": {
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "160": {
      "first_revert": true,
      "fn": null,
      "offset": [
        247,
        2212
      ],
      "op": "REVERT",
      "path": "4"
    },
    "161": {
      "offset": [
        299,
        386
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "162": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "163": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "DUP1",
      "path": "4"
    },
    "164": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD"
    },
    "168": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "DUP1",
      "path": "4"
    },
    "172": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "REVERT",
      "path": "4"
    },
    "173": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "174": {
      "op": "POP"
    },
    "175": {
      "offset": [
        299,
        386
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD9"
    },
    "178": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBC"
    },
    "181": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "182": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "184": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8CF"
    },
    "187": {
      "fn": null,
      "jump": "i",
      "offset": [
        299,
        386
      ],
      "op": "JUMP",
      "path": "4"
    },
    "188": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "189": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "191": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "193": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "194": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "DUP2",
      "path": "4"
    },
    "195": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "198": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "199": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "DUP4",
      "path": "4"
    },
    "200": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "201": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "203": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "DUP1",
      "path": "4"
    },
    "204": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "DUP5",
      "path": "4"
    },
    "205": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "206": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "209": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "210": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "DUP3",
      "path": "4"
    },
    "211": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "212": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "213": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "215": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "DUP2",
      "path": "4"
    },
    "216": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "JUMP",
      "path": "4"
    },
    "217": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "220": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "221": {
      "op": "SWAP1"
    },
    "222": {
      "op": "DUP2"
    },
    "223": {
      "op": "MSTORE"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "226": {
      "op": "ADD"
    },
    "227": {
      "offset": [
        299,
        386
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "228": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "230": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "231": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "DUP1",
      "path": "4"
    },
    "232": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "233": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "SUB",
      "path": "4"
    },
    "234": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "235": {
      "fn": null,
      "offset": [
        299,
        386
      ],
      "op": "RETURN",
      "path": "4"
    },
    "236": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "237": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "238": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "DUP1",
      "path": "4"
    },
    "239": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "240": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF8"
    },
    "243": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "244": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "246": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "DUP1",
      "path": "4"
    },
    "247": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "REVERT",
      "path": "4"
    },
    "248": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "249": {
      "op": "POP"
    },
    "250": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C"
    },
    "253": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x107"
    },
    "256": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "257": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "259": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x902"
    },
    "262": {
      "fn": "NFTInfo.removeClaim",
      "jump": "i",
      "offset": [
        1510,
        2115
      ],
      "op": "JUMP",
      "path": "4"
    },
    "263": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "264": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x240"
    },
    "267": {
      "fn": "NFTInfo.removeClaim",
      "jump": "i",
      "offset": [
        1510,
        2115
      ],
      "op": "JUMP",
      "path": "4"
    },
    "268": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "269": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "STOP",
      "path": "4"
    },
    "270": {
      "offset": [
        799,
        854
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "271": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "272": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "DUP1",
      "path": "4"
    },
    "273": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "274": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11A"
    },
    "277": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "278": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "280": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "DUP1",
      "path": "4"
    },
    "281": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "REVERT",
      "path": "4"
    },
    "282": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "283": {
      "op": "POP"
    },
    "284": {
      "offset": [
        799,
        854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "287": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x129"
    },
    "290": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "291": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "293": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x902"
    },
    "296": {
      "fn": "NFTInfo.removeClaim",
      "jump": "i",
      "offset": [
        799,
        854
      ],
      "op": "JUMP",
      "path": "4"
    },
    "297": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "298": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F9"
    },
    "301": {
      "fn": "NFTInfo.removeClaim",
      "jump": "i",
      "offset": [
        799,
        854
      ],
      "op": "JUMP",
      "path": "4"
    },
    "302": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "303": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "305": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "DUP1",
      "path": "4"
    },
    "306": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "313": {
      "op": "SHL"
    },
    "314": {
      "op": "SUB"
    },
    "315": {
      "op": "SWAP1"
    },
    "316": {
      "op": "SWAP4"
    },
    "317": {
      "op": "AND"
    },
    "318": {
      "op": "DUP4"
    },
    "319": {
      "op": "MSTORE"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "322": {
      "op": "DUP4"
    },
    "323": {
      "op": "ADD"
    },
    "324": {
      "op": "SWAP2"
    },
    "325": {
      "op": "SWAP1"
    },
    "326": {
      "op": "SWAP2"
    },
    "327": {
      "op": "MSTORE"
    },
    "328": {
      "op": "ADD"
    },
    "329": {
      "offset": [
        799,
        854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE3"
    },
    "332": {
      "op": "JUMP"
    },
    "333": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "334": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "335": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "DUP1",
      "path": "4"
    },
    "336": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "337": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x159"
    },
    "340": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "341": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "343": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "DUP1",
      "path": "4"
    },
    "344": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "REVERT",
      "path": "4"
    },
    "345": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "346": {
      "op": "POP"
    },
    "347": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C"
    },
    "350": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x168"
    },
    "353": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "354": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "356": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x92C"
    },
    "359": {
      "fn": "NFTInfo.setCost",
      "jump": "i",
      "offset": [
        2121,
        2208
      ],
      "op": "JUMP",
      "path": "4"
    },
    "360": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "361": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x43F"
    },
    "364": {
      "fn": "NFTInfo.setCost",
      "jump": "i",
      "offset": [
        2121,
        2208
      ],
      "op": "JUMP",
      "path": "4"
    },
    "365": {
      "offset": [
        392,
        446
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "366": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "367": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "DUP1",
      "path": "4"
    },
    "368": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "369": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x179"
    },
    "372": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "373": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "375": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "DUP1",
      "path": "4"
    },
    "376": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "REVERT",
      "path": "4"
    },
    "377": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "378": {
      "op": "POP"
    },
    "379": {
      "offset": [
        392,
        446
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD9"
    },
    "382": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188"
    },
    "385": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "386": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "388": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x945"
    },
    "391": {
      "fn": "NFTInfo.setCost",
      "jump": "i",
      "offset": [
        392,
        446
      ],
      "op": "JUMP",
      "path": "4"
    },
    "392": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "393": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "395": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "397": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "398": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "400": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "401": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "DUP2",
      "path": "4"
    },
    "402": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "403": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "405": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "406": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "407": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "408": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "DUP2",
      "path": "4"
    },
    "409": {
      "fn": "NFTInfo.setCost",
      "offset": [
        392,
        446
      ],
      "op": "JUMP",
      "path": "4"
    },
    "410": {
      "offset": [
        861,
        896
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "411": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "412": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "DUP1",
      "path": "4"
    },
    "413": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "414": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A6"
    },
    "417": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "418": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "420": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "DUP1",
      "path": "4"
    },
    "421": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "REVERT",
      "path": "4"
    },
    "422": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "423": {
      "op": "POP"
    },
    "424": {
      "offset": [
        861,
        896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "427": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B5"
    },
    "430": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "431": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "433": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x92C"
    },
    "436": {
      "fn": "NFTInfo.setCost",
      "jump": "i",
      "offset": [
        861,
        896
      ],
      "op": "JUMP",
      "path": "4"
    },
    "437": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "438": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x46E"
    },
    "441": {
      "fn": "NFTInfo.setCost",
      "jump": "i",
      "offset": [
        861,
        896
      ],
      "op": "JUMP",
      "path": "4"
    },
    "442": {
      "offset": [
        675,
        703
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "443": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "444": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "DUP1",
      "path": "4"
    },
    "445": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "446": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C6"
    },
    "449": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "450": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "452": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "DUP1",
      "path": "4"
    },
    "453": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "REVERT",
      "path": "4"
    },
    "454": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "455": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "POP",
      "path": "4"
    },
    "456": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD9"
    },
    "459": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "461": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "462": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "DUP2",
      "path": "4"
    },
    "463": {
      "fn": "NFTInfo.setCost",
      "offset": [
        675,
        703
      ],
      "op": "JUMP",
      "path": "4"
    },
    "464": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "465": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "466": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "467": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "468": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "471": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "472": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "474": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "475": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "476": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "477": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "478": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C"
    },
    "481": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A6"
    },
    "484": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "485": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "486": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "487": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "488": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "489": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1"
    },
    "492": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "493": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "495": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "496": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "497": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "498": {
      "op": "POP"
    },
    "499": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "501": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "502": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "504": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "op": "SUB"
    },
    "513": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "514": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "515": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "516": {
      "op": "DUP2"
    },
    "517": {
      "op": "MSTORE"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "520": {
      "op": "ADD"
    },
    "521": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "524": {
      "op": "JUMP"
    },
    "525": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        903,
        1503
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "526": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        903,
        1503
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C"
    },
    "529": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        903,
        1503
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21B"
    },
    "532": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        903,
        1503
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "533": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        903,
        1503
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "535": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        903,
        1503
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x902"
    },
    "538": {
      "fn": "NFTInfo.addNFTInfo",
      "jump": "i",
      "offset": [
        903,
        1503
      ],
      "op": "JUMP",
      "path": "4"
    },
    "539": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        903,
        1503
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "540": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        903,
        1503
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4DC"
    },
    "543": {
      "fn": "NFTInfo.addNFTInfo",
      "jump": "i",
      "offset": [
        903,
        1503
      ],
      "op": "JUMP",
      "path": "4"
    },
    "544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22C"
    },
    "551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "552": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "554": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "557": {
      "op": "POP"
    },
    "558": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C"
    },
    "561": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23B"
    },
    "564": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "565": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "567": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x945"
    },
    "570": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "571": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "572": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AA"
    },
    "575": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "576": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1510,
        2115
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "577": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "579": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "581": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "582": {
      "offset": [
        2325,
        2344
      ],
      "op": "SUB",
      "path": "1"
    },
    "583": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x297"
    },
    "586": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "587": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "589": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "590": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "594": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "596": {
      "op": "SHL"
    },
    "597": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "598": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "601": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "603": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "1"
    },
    "604": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "1"
    },
    "605": {
      "op": "MSTORE"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "610": {
      "op": "DUP3"
    },
    "611": {
      "op": "ADD"
    },
    "612": {
      "op": "MSTORE"
    },
    "613": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "648": {
      "op": "DUP3"
    },
    "649": {
      "op": "ADD"
    },
    "650": {
      "op": "MSTORE"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "653": {
      "op": "ADD"
    },
    "654": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "655": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "657": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "658": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP1",
      "path": "1"
    },
    "659": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "660": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "SUB",
      "path": "1"
    },
    "661": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "662": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "663": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "664": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "666": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "668": {
      "offset": [
        2455,
        2473
      ],
      "op": "DUP2",
      "path": "1"
    },
    "669": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2455,
        2473
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "670": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "671": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1645,
        1655
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 1
    },
    "672": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "674": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "675": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "DUP2",
      "path": "4"
    },
    "676": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "677": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "679": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "680": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "DUP3",
      "path": "4"
    },
    "681": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "682": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "684": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "DUP1",
      "path": "4"
    },
    "685": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "DUP3",
      "path": "4"
    },
    "686": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1656
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "693": {
      "op": "SHL"
    },
    "694": {
      "op": "SUB"
    },
    "695": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1674
      ],
      "op": "DUP7",
      "path": "4"
    },
    "696": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1674
      ],
      "op": "AND",
      "path": "4"
    },
    "697": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1674
      ],
      "op": "DUP4",
      "path": "4"
    },
    "698": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1674
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "699": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1674
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "700": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1674
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "701": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1674
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "702": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1674
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "703": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1674
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "704": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1686
      ],
      "op": "DUP2",
      "path": "4"
    },
    "705": {
      "branch": 22,
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1613,
        1686
      ],
      "op": "EQ",
      "path": "4"
    },
    "706": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1605,
        1707
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x300"
    },
    "709": {
      "branch": 22,
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1605,
        1707
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "710": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1605,
        1707
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "712": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1605,
        1707
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "713": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "719": {
      "op": "SHL"
    },
    "720": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1605,
        1707
      ],
      "op": "DUP2",
      "path": "4"
    },
    "721": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1605,
        1707
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "724": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1605,
        1707
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "726": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1605,
        1707
      ],
      "op": "DUP3",
      "path": "4"
    },
    "727": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1605,
        1707
      ],
      "op": "ADD",
      "path": "4"
    },
    "728": {
      "op": "MSTORE"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "733": {
      "op": "DUP3"
    },
    "734": {
      "op": "ADD"
    },
    "735": {
      "op": "MSTORE"
    },
    "736": {
      "op": "PUSH16",
      "value": "0x4E6F207265706F72746564204E465473"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "758": {
      "op": "DUP3"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "op": "MSTORE"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1605,
        1707
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28E"
    },
    "767": {
      "op": "JUMP"
    },
    "768": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1605,
        1707
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "769": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1752,
        1762
      ],
      "op": "CALLER",
      "path": "4"
    },
    "770": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1717,
        1732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "772": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1763
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "773": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1763
      ],
      "op": "DUP2",
      "path": "4"
    },
    "774": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1763
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "775": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1751
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "777": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1763
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "779": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1763
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "780": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1763
      ],
      "op": "DUP2",
      "path": "4"
    },
    "781": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1763
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "782": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1763
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "784": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1763
      ],
      "op": "DUP1",
      "path": "4"
    },
    "785": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1763
      ],
      "op": "DUP4",
      "path": "4"
    },
    "786": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1763
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "op": "SUB"
    },
    "795": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1781
      ],
      "op": "DUP7",
      "path": "4"
    },
    "796": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1781
      ],
      "op": "AND",
      "path": "4"
    },
    "797": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1781
      ],
      "op": "DUP5",
      "path": "4"
    },
    "798": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1781
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "799": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1781
      ],
      "op": "DUP3",
      "path": "4"
    },
    "800": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1781
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "801": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "802": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1781
      ],
      "op": "DUP4",
      "path": "4"
    },
    "803": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1781
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "804": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1791
      ],
      "op": "DUP5",
      "path": "4"
    },
    "805": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1791
      ],
      "op": "DUP5",
      "path": "4"
    },
    "806": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1791
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "807": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1791
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "808": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1791
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "809": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1791
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "810": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1791
      ],
      "op": "DUP2",
      "path": "4"
    },
    "811": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1791
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "812": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1791
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "813": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1799,
        1802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "815": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1799,
        1802
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "816": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33A"
    },
    "819": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1796
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "820": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1794,
        1796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5A"
    },
    "822": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x97D"
    },
    "825": {
      "fn": "NFTInfo.removeClaim",
      "jump": "i",
      "offset": [
        1735,
        1796
      ],
      "op": "JUMP",
      "path": "4"
    },
    "826": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1796
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "827": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1802
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x344"
    },
    "830": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1802
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "831": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1802
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "832": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1802
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x99A"
    },
    "835": {
      "fn": "NFTInfo.removeClaim",
      "jump": "i",
      "offset": [
        1735,
        1802
      ],
      "op": "JUMP",
      "path": "4"
    },
    "836": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1735,
        1802
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "837": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1829,
        1839
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 2
    },
    "838": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1871,
        1872
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "840": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1840
      ],
      "op": "DUP2",
      "path": "4"
    },
    "841": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1840
      ],
      "op": "DUP2",
      "path": "4"
    },
    "842": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1840
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "843": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1828
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "845": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1840
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "847": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1840
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "848": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1840
      ],
      "op": "DUP2",
      "path": "4"
    },
    "849": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1840
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "850": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1840
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "852": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1840
      ],
      "op": "DUP1",
      "path": "4"
    },
    "853": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1840
      ],
      "op": "DUP4",
      "path": "4"
    },
    "854": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1840
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "861": {
      "op": "SHL"
    },
    "862": {
      "op": "SUB"
    },
    "863": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1858
      ],
      "op": "DUP10",
      "path": "4"
    },
    "864": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1858
      ],
      "op": "AND",
      "path": "4"
    },
    "865": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1858
      ],
      "op": "DUP5",
      "path": "4"
    },
    "866": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1858
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "867": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1858
      ],
      "op": "DUP3",
      "path": "4"
    },
    "868": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1858
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "869": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1858
      ],
      "op": "DUP1",
      "path": "4"
    },
    "870": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1858
      ],
      "op": "DUP4",
      "path": "4"
    },
    "871": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1858
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "872": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1868
      ],
      "op": "DUP8",
      "path": "4"
    },
    "873": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1868
      ],
      "op": "DUP5",
      "path": "4"
    },
    "874": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1868
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "875": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1868
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "876": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1868
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "877": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1868
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "878": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1868
      ],
      "op": "DUP2",
      "path": "4"
    },
    "879": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1868
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "880": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1812,
        1872
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "881": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1717,
        1802
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "882": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1717,
        1802
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "883": {
      "op": "POP"
    },
    "884": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1939,
        1976
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 3,
      "value": "0x37D"
    },
    "887": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1829,
        1839
      ],
      "op": "DUP2",
      "path": "4"
    },
    "888": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1717,
        1802
      ],
      "op": "DUP4",
      "path": "4"
    },
    "889": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1939,
        1956
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x745"
    },
    "892": {
      "fn": "NFTInfo.removeClaim",
      "jump": "i",
      "offset": [
        1939,
        1976
      ],
      "op": "JUMP",
      "path": "4"
    },
    "893": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1939,
        1976
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "894": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2038,
        2048
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 4
    },
    "895": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2049
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "897": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2049
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "898": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2049
      ],
      "op": "DUP2",
      "path": "4"
    },
    "899": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2049
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "900": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "902": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2049
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "904": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2049
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "905": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2049
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "907": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2049
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "908": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2049
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "909": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2049
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "910": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2053
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x399"
    },
    "913": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2053
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "914": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2052,
        2053
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "916": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2052,
        2053
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "917": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2053
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9BC"
    },
    "920": {
      "fn": "NFTInfo.removeClaim",
      "jump": "i",
      "offset": [
        2019,
        2053
      ],
      "op": "JUMP",
      "path": "4"
    },
    "921": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2019,
        2053
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "922": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2005,
        2015
      ],
      "op": "CALLER",
      "path": "4"
    },
    "923": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "925": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "926": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "DUP2",
      "path": "4"
    },
    "927": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "928": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2004
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "930": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "932": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "933": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "DUP2",
      "path": "4"
    },
    "934": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "935": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "937": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "938": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "DUP3",
      "path": "4"
    },
    "939": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "940": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2016
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "941": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2053
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "942": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2053
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "943": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2053
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "944": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        1986,
        2053
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "945": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2068,
        2108
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 5
    },
    "946": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2068,
        2108
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "953": {
      "op": "SHL"
    },
    "954": {
      "op": "SUB"
    },
    "955": {
      "op": "DUP8"
    },
    "956": {
      "op": "AND"
    },
    "957": {
      "op": "DUP2"
    },
    "958": {
      "op": "MSTORE"
    },
    "959": {
      "op": "SWAP2"
    },
    "960": {
      "op": "DUP3"
    },
    "961": {
      "op": "ADD"
    },
    "962": {
      "op": "DUP6"
    },
    "963": {
      "op": "SWAP1"
    },
    "964": {
      "op": "MSTORE"
    },
    "965": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2068,
        2108
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x1C44899BEF38867F8F6B8183ED30A821F5F247B92841272D5EE14507047747B2"
    },
    "998": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2068,
        2108
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "999": {
      "op": "ADD"
    },
    "1000": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2068,
        2108
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1002": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2068,
        2108
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1003": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2068,
        2108
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1004": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2068,
        2108
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1005": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2068,
        2108
      ],
      "op": "SUB",
      "path": "4"
    },
    "1006": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2068,
        2108
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1007": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2068,
        2108
      ],
      "op": "LOG1",
      "path": "4"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "op": "POP"
    },
    "1010": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1012": {
      "offset": [
        2628,
        2650
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1013": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "fn": "NFTInfo.removeClaim",
      "jump": "o",
      "offset": [
        1510,
        2115
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1017": {
      "offset": [
        799,
        854
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1018": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "1020": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1022": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1023": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1024": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1026": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1027": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1029": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1031": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1032": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1033": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1034": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1035": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1036": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "LT",
      "path": "4"
    },
    "1037": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x415"
    },
    "1040": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1041": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1043": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1044": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1045": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1046": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1048": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1049": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1050": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1051": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1053": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1054": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1055": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1056": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1058": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1059": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1060": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "MUL",
      "path": "4"
    },
    "1061": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "ADD",
      "path": "4"
    },
    "1062": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1063": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1064": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1066": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1067": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1068": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "ADD",
      "path": "4"
    },
    "1069": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1076": {
      "op": "SHL"
    },
    "1077": {
      "op": "SUB"
    },
    "1078": {
      "offset": [
        799,
        854
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1079": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1080": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "AND",
      "path": "4"
    },
    "1081": {
      "fn": "NFTInfo.removeClaim",
      "offset": [
        799,
        854
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "offset": [
        799,
        854
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1084": {
      "op": "POP"
    },
    "1085": {
      "offset": [
        799,
        854
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1086": {
      "fn": "NFTInfo.removeClaim",
      "jump": "o",
      "offset": [
        799,
        854
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1087": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2121,
        2208
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1088": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1090": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1097": {
      "op": "SHL"
    },
    "1098": {
      "op": "SUB"
    },
    "1099": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1100": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 6
    },
    "1101": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1102": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x469"
    },
    "1105": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1106": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1108": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1109": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1117": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1118": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1120": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1121": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28E"
    },
    "1124": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1125": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CF"
    },
    "1128": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1129": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1130": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2180,
        2193
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0x5"
    },
    "1132": {
      "fn": "NFTInfo.setCost",
      "offset": [
        2180,
        2201
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1133": {
      "fn": "NFTInfo.setCost",
      "jump": "o",
      "offset": [
        2121,
        2208
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1134": {
      "offset": [
        861,
        896
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1135": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "1137": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1138": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1139": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1140": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1141": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "LT",
      "path": "4"
    },
    "1142": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x47E"
    },
    "1145": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1146": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1148": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1149": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1150": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1151": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1153": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1154": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1155": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1156": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1158": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1159": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1160": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1161": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1163": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1164": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1165": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "MUL",
      "path": "4"
    },
    "1166": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "ADD",
      "path": "4"
    },
    "1167": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1168": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1169": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1171": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1172": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1173": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "ADD",
      "path": "4"
    },
    "1174": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1181": {
      "op": "SHL"
    },
    "1182": {
      "op": "SUB"
    },
    "1183": {
      "offset": [
        861,
        896
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1184": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1185": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "AND",
      "path": "4"
    },
    "1186": {
      "fn": "NFTInfo.setCost",
      "offset": [
        861,
        896
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1187": {
      "op": "POP"
    },
    "1188": {
      "offset": [
        861,
        896
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1189": {
      "fn": "NFTInfo.setCost",
      "jump": "o",
      "offset": [
        861,
        896
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1190": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1191": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1193": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1200": {
      "op": "SHL"
    },
    "1201": {
      "op": "SUB"
    },
    "1202": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1203": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1204": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1205": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D0"
    },
    "1208": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1209": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1211": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1212": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1220": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1221": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1223": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1224": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28E"
    },
    "1227": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1228": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CF"
    },
    "1231": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1232": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1233": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x4DA"
    },
    "1236": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1238": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x863"
    },
    "1241": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1242": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1243": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1244": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        903,
        1503
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1245": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1013,
        1026
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x5"
    },
    "1247": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1013,
        1026
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1248": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1000,
        1009
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1249": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1000,
        1026
      ],
      "op": "LT",
      "path": "4"
    },
    "1250": {
      "branch": 23,
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1000,
        1026
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1251": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        992,
        1050
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x524"
    },
    "1254": {
      "branch": 23,
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        992,
        1050
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1255": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        992,
        1050
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1257": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        992,
        1050
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1258": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        992,
        1050
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1266": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        992,
        1050
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1269": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        992,
        1050
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1271": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        992,
        1050
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1272": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        992,
        1050
      ],
      "op": "ADD",
      "path": "4"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1278": {
      "op": "DUP3"
    },
    "1279": {
      "op": "ADD"
    },
    "1280": {
      "op": "MSTORE"
    },
    "1281": {
      "op": "PUSH19",
      "value": "0x496E73756666696369656E742066756E647321"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1303": {
      "op": "SHL"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1306": {
      "op": "DUP3"
    },
    "1307": {
      "op": "ADD"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1311": {
      "op": "ADD"
    },
    "1312": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        992,
        1050
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28E"
    },
    "1315": {
      "op": "JUMP"
    },
    "1316": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        992,
        1050
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1317": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1077,
        1087
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 10
    },
    "1318": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1320": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1321": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1322": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1323": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1076
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1325": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1327": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1328": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1329": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1330": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1332": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1333": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1334": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1088
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "op": "SUB"
    },
    "1343": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1344": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1345": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "AND",
      "path": "4"
    },
    "1346": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1347": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1348": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1349": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1350": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1351": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1352": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1353": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1354": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1106
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1355": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1116
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1356": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1116
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1357": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1116
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1358": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1116
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1359": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1116
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1360": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1116
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1361": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1116
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1362": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1116
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1363": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1119,
        1128
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1364": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1128
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1365": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1060,
        1128
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1366": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1181
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 11
    },
    "1367": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1181
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1368": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1181
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1369": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1169
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1371": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1372": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1181
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1373": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1181
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1374": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1181
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1375": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1181
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1376": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1181
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1377": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1199
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1378": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1199
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1379": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1199
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1380": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1199
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1381": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1199
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1382": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1199
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1383": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1199
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1384": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1199
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1385": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1210
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1386": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1210
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1387": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1138,
        1210
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1388": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1247
      ],
      "op": "DUP7",
      "path": "4",
      "statement": 12
    },
    "1389": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1247
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1390": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1247
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1391": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1235
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "1393": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1247
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1394": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1247
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1395": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1247
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1396": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1247
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1397": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1247
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1398": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1399": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1400": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1401": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1402": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "ADD",
      "path": "4"
    },
    "1403": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1404": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1405": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1406": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1407": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1408": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1409": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1410": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "ADD",
      "path": "4"
    },
    "1411": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1412": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1413": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1253,
        1291
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1414": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1415": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1416": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1418": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1419": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1420": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "ADD",
      "path": "4"
    },
    "1421": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1422": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1423": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1424": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1425": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1426": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1427": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1428": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1429": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1430": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1431": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1432": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "MUL",
      "path": "4"
    },
    "1433": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1434": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1435": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "ADD",
      "path": "4"
    },
    "1436": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1437": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1444": {
      "op": "SHL"
    },
    "1445": {
      "op": "SUB"
    },
    "1446": {
      "op": "NOT"
    },
    "1447": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "AND",
      "path": "4"
    },
    "1448": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1449": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1450": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1451": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "AND",
      "path": "4"
    },
    "1452": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1453": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1454": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1455": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "OR",
      "path": "4"
    },
    "1456": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1457": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1458": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1459": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1460": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1461": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1462": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "ADD",
      "path": "4"
    },
    "1463": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1221,
        1292
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1464": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1366
      ],
      "op": "SWAP4",
      "path": "4",
      "statement": 13
    },
    "1465": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1366
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1466": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1366
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1467": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1354
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1469": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1366
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1470": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1366
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1471": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1366
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1472": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1366
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1473": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1366
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1474": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1366
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1475": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1370
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5CB"
    },
    "1478": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1370
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1479": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1370
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA04"
    },
    "1482": {
      "fn": "NFTInfo.addNFTInfo",
      "jump": "i",
      "offset": [
        1336,
        1370
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1483": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1336,
        1370
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1484": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1322,
        1332
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1485": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1487": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1488": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1489": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1490": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1321
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1492": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1494": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1495": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1496": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1497": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1499": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1500": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1501": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1333
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1502": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1370
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1503": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1370
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1504": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1370
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1505": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1303,
        1370
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1506": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 14
    },
    "1507": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1508": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1509": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1510": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "ADD",
      "path": "4"
    },
    "1511": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1512": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1519": {
      "op": "SHL"
    },
    "1520": {
      "op": "SUB"
    },
    "1521": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1522": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1523": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "AND",
      "path": "4"
    },
    "1524": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1525": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1526": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1527": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1528": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1529": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "ADD",
      "path": "4"
    },
    "1530": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1531": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1532": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1402,
        1440
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1533": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1396
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "1535": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1536": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1537": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1539": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1540": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "ADD",
      "path": "4"
    },
    "1541": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1542": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1543": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "1544": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1545": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1546": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1547": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
    },
    "1580": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1582": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1583": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "1584": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "MUL",
      "path": "4"
    },
    "1585": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1586": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1587": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "ADD",
      "path": "4"
    },
    "1588": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1589": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "op": "SUB"
    },
    "1598": {
      "op": "NOT"
    },
    "1599": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "AND",
      "path": "4"
    },
    "1600": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1601": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1602": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1603": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "AND",
      "path": "4"
    },
    "1604": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "OR",
      "path": "4"
    },
    "1605": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1606": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1607": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1608": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1609": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1610": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C689"
    },
    "1643": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1644": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1645": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "ADD",
      "path": "4"
    },
    "1646": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1647": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1648": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1649": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1381,
        1441
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1650": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1456,
        1495
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 15
    },
    "1651": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1456,
        1495
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1652": {
      "op": "SWAP2"
    },
    "1653": {
      "op": "DUP3"
    },
    "1654": {
      "op": "MSTORE"
    },
    "1655": {
      "op": "DUP2"
    },
    "1656": {
      "op": "ADD"
    },
    "1657": {
      "op": "DUP4"
    },
    "1658": {
      "op": "SWAP1"
    },
    "1659": {
      "op": "MSTORE"
    },
    "1660": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1456,
        1495
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x448DDC4A904FC719CE9B21ABBBB90B051EAC4C3E79E44C8E60ECD59ADD866603"
    },
    "1693": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1456,
        1495
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1456,
        1495
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1697": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1456,
        1495
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1698": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1456,
        1495
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1699": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1456,
        1495
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1700": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1456,
        1495
      ],
      "op": "SUB",
      "path": "4"
    },
    "1701": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1456,
        1495
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1702": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        1456,
        1495
      ],
      "op": "LOG1",
      "path": "4"
    },
    "1703": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        903,
        1503
      ],
      "op": "POP",
      "path": "4"
    },
    "1704": {
      "fn": "NFTInfo.addNFTInfo",
      "offset": [
        903,
        1503
      ],
      "op": "POP",
      "path": "4"
    },
    "1705": {
      "fn": "NFTInfo.addNFTInfo",
      "jump": "o",
      "offset": [
        903,
        1503
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1706": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1707": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1709": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1716": {
      "op": "SHL"
    },
    "1717": {
      "op": "SUB"
    },
    "1718": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1719": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1720": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1721": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D4"
    },
    "1724": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1725": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1727": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1734": {
      "op": "SHL"
    },
    "1735": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1737": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1739": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1740": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28E"
    },
    "1743": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1744": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CF"
    },
    "1747": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1748": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "op": "SUB"
    },
    "1757": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 16
    },
    "1758": {
      "branch": 26,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1759": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x739"
    },
    "1762": {
      "branch": 26,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1766": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1772": {
      "op": "SHL"
    },
    "1773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1779": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1780": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1781": {
      "op": "MSTORE"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1786": {
      "op": "DUP3"
    },
    "1787": {
      "op": "ADD"
    },
    "1788": {
      "op": "MSTORE"
    },
    "1789": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1824": {
      "op": "DUP3"
    },
    "1825": {
      "op": "ADD"
    },
    "1826": {
      "op": "MSTORE"
    },
    "1827": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1836": {
      "op": "SHL"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1839": {
      "op": "DUP3"
    },
    "1840": {
      "op": "ADD"
    },
    "1841": {
      "op": "MSTORE"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1844": {
      "op": "ADD"
    },
    "1845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28E"
    },
    "1848": {
      "op": "JUMP"
    },
    "1849": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1850": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x742"
    },
    "1853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1854": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x863"
    },
    "1857": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1860": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1861": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1862": {
      "fn": "Address.sendValue",
      "offset": [
        2526,
        2532
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 18
    },
    "1863": {
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2522
      ],
      "op": "SELFBALANCE",
      "path": "2"
    },
    "1864": {
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2532
      ],
      "op": "LT",
      "path": "2"
    },
    "1865": {
      "branch": 24,
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2532
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1866": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x795"
    },
    "1869": {
      "branch": 24,
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1870": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1872": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1879": {
      "op": "SHL"
    },
    "1880": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1881": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1884": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1886": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1887": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "ADD",
      "path": "2"
    },
    "1888": {
      "op": "MSTORE"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1893": {
      "op": "DUP3"
    },
    "1894": {
      "op": "ADD"
    },
    "1895": {
      "op": "MSTORE"
    },
    "1896": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1931": {
      "op": "DUP3"
    },
    "1932": {
      "op": "ADD"
    },
    "1933": {
      "op": "MSTORE"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1936": {
      "op": "ADD"
    },
    "1937": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E"
    },
    "1940": {
      "op": "JUMP"
    },
    "1941": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1942": {
      "fn": "Address.sendValue",
      "offset": [
        2578,
        2590
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1944": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1951": {
      "op": "SHL"
    },
    "1952": {
      "op": "SUB"
    },
    "1953": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2610
      ],
      "op": "AND",
      "path": "2"
    },
    "1954": {
      "fn": "Address.sendValue",
      "offset": [
        2618,
        2624
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1955": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1957": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1958": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1960": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1962": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1963": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1964": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1965": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SUB",
      "path": "2"
    },
    "1966": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1967": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1968": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1969": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "GAS",
      "path": "2"
    },
    "1970": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "CALL",
      "path": "2"
    },
    "1971": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1972": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "2"
    },
    "1973": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "2"
    },
    "1974": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "2"
    },
    "1975": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1976": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1977": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1979": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1980": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "EQ",
      "path": "2"
    },
    "1981": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E2"
    },
    "1984": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1985": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1987": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1988": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1989": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "2"
    },
    "1990": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1992": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "NOT",
      "path": "2"
    },
    "1993": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "1995": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1996": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "2"
    },
    "1997": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "AND",
      "path": "2"
    },
    "1998": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1999": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "2"
    },
    "2000": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2002": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2003": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2004": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2005": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2006": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2007": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2009": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2011": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2012": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "2"
    },
    "2013": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2014": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E7"
    },
    "2017": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2018": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2019": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2021": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2022": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "2"
    },
    "2023": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2024": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "2"
    },
    "2025": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "POP",
      "path": "2"
    },
    "2026": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2027": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "POP",
      "path": "2"
    },
    "2028": {
      "branch": 25,
      "fn": "Address.sendValue",
      "offset": [
        2647,
        2654
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 19
    },
    "2029": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85E"
    },
    "2032": {
      "branch": 25,
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2033": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2035": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2036": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2042": {
      "op": "SHL"
    },
    "2043": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2044": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2047": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2049": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2050": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "ADD",
      "path": "2"
    },
    "2051": {
      "op": "MSTORE"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2056": {
      "op": "DUP3"
    },
    "2057": {
      "op": "ADD"
    },
    "2058": {
      "op": "MSTORE"
    },
    "2059": {
      "op": "PUSH32",
      "value": "0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2094": {
      "op": "DUP3"
    },
    "2095": {
      "op": "ADD"
    },
    "2096": {
      "op": "MSTORE"
    },
    "2097": {
      "op": "PUSH32",
      "value": "0x6563697069656E74206D61792068617665207265766572746564000000000000"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2132": {
      "op": "DUP3"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "op": "MSTORE"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2137": {
      "op": "ADD"
    },
    "2138": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E"
    },
    "2141": {
      "op": "JUMP"
    },
    "2142": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2143": {
      "fn": "Address.sendValue",
      "offset": [
        2483,
        2724
      ],
      "op": "POP",
      "path": "2"
    },
    "2144": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "POP",
      "path": "2"
    },
    "2145": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "POP",
      "path": "2"
    },
    "2146": {
      "fn": "Address.sendValue",
      "jump": "o",
      "offset": [
        2412,
        2724
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2147": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2148": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2150": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2151": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2158": {
      "op": "SHL"
    },
    "2159": {
      "op": "SUB"
    },
    "2160": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 20
    },
    "2161": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2162": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "op": "SUB"
    },
    "2171": {
      "op": "NOT"
    },
    "2172": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2173": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2174": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2175": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "2176": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2177": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2178": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x40"
    },
    "2180": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2181": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2182": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2183": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2184": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "2185": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2186": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2187": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2188": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2221": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2222": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2223": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2224": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2225": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2226": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2227": {
      "op": "JUMPDEST"
    },
    "2228": {
      "op": "DUP1"
    },
    "2229": {
      "op": "CALLDATALOAD"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2236": {
      "op": "SHL"
    },
    "2237": {
      "op": "SUB"
    },
    "2238": {
      "op": "DUP2"
    },
    "2239": {
      "op": "AND"
    },
    "2240": {
      "op": "DUP2"
    },
    "2241": {
      "op": "EQ"
    },
    "2242": {
      "op": "PUSH2",
      "value": "0x8CA"
    },
    "2245": {
      "op": "JUMPI"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2248": {
      "op": "DUP1"
    },
    "2249": {
      "op": "REVERT"
    },
    "2250": {
      "op": "JUMPDEST"
    },
    "2251": {
      "op": "SWAP2"
    },
    "2252": {
      "op": "SWAP1"
    },
    "2253": {
      "op": "POP"
    },
    "2254": {
      "jump": "o",
      "op": "JUMP"
    },
    "2255": {
      "op": "JUMPDEST"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2258": {
      "op": "DUP1"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2261": {
      "op": "DUP4"
    },
    "2262": {
      "op": "DUP6"
    },
    "2263": {
      "op": "SUB"
    },
    "2264": {
      "op": "SLT"
    },
    "2265": {
      "op": "ISZERO"
    },
    "2266": {
      "op": "PUSH2",
      "value": "0x8E2"
    },
    "2269": {
      "op": "JUMPI"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2272": {
      "op": "DUP1"
    },
    "2273": {
      "op": "REVERT"
    },
    "2274": {
      "op": "JUMPDEST"
    },
    "2275": {
      "op": "PUSH2",
      "value": "0x8EB"
    },
    "2278": {
      "op": "DUP4"
    },
    "2279": {
      "op": "PUSH2",
      "value": "0x8B3"
    },
    "2282": {
      "jump": "i",
      "op": "JUMP"
    },
    "2283": {
      "op": "JUMPDEST"
    },
    "2284": {
      "op": "SWAP2"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "op": "PUSH2",
      "value": "0x8F9"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2291": {
      "op": "DUP5"
    },
    "2292": {
      "op": "ADD"
    },
    "2293": {
      "op": "PUSH2",
      "value": "0x8B3"
    },
    "2296": {
      "jump": "i",
      "op": "JUMP"
    },
    "2297": {
      "op": "JUMPDEST"
    },
    "2298": {
      "op": "SWAP1"
    },
    "2299": {
      "op": "POP"
    },
    "2300": {
      "op": "SWAP3"
    },
    "2301": {
      "op": "POP"
    },
    "2302": {
      "op": "SWAP3"
    },
    "2303": {
      "op": "SWAP1"
    },
    "2304": {
      "op": "POP"
    },
    "2305": {
      "jump": "o",
      "op": "JUMP"
    },
    "2306": {
      "op": "JUMPDEST"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2309": {
      "op": "DUP1"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2312": {
      "op": "DUP4"
    },
    "2313": {
      "op": "DUP6"
    },
    "2314": {
      "op": "SUB"
    },
    "2315": {
      "op": "SLT"
    },
    "2316": {
      "op": "ISZERO"
    },
    "2317": {
      "op": "PUSH2",
      "value": "0x915"
    },
    "2320": {
      "op": "JUMPI"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2323": {
      "op": "DUP1"
    },
    "2324": {
      "op": "REVERT"
    },
    "2325": {
      "op": "JUMPDEST"
    },
    "2326": {
      "op": "PUSH2",
      "value": "0x91E"
    },
    "2329": {
      "op": "DUP4"
    },
    "2330": {
      "op": "PUSH2",
      "value": "0x8B3"
    },
    "2333": {
      "jump": "i",
      "op": "JUMP"
    },
    "2334": {
      "op": "JUMPDEST"
    },
    "2335": {
      "op": "SWAP5"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2338": {
      "op": "SWAP4"
    },
    "2339": {
      "op": "SWAP1"
    },
    "2340": {
      "op": "SWAP4"
    },
    "2341": {
      "op": "ADD"
    },
    "2342": {
      "op": "CALLDATALOAD"
    },
    "2343": {
      "op": "SWAP4"
    },
    "2344": {
      "op": "POP"
    },
    "2345": {
      "op": "POP"
    },
    "2346": {
      "op": "POP"
    },
    "2347": {
      "jump": "o",
      "op": "JUMP"
    },
    "2348": {
      "op": "JUMPDEST"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2353": {
      "op": "DUP3"
    },
    "2354": {
      "op": "DUP5"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "op": "SLT"
    },
    "2357": {
      "op": "ISZERO"
    },
    "2358": {
      "op": "PUSH2",
      "value": "0x93E"
    },
    "2361": {
      "op": "JUMPI"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2364": {
      "op": "DUP1"
    },
    "2365": {
      "op": "REVERT"
    },
    "2366": {
      "op": "JUMPDEST"
    },
    "2367": {
      "op": "POP"
    },
    "2368": {
      "op": "CALLDATALOAD"
    },
    "2369": {
      "op": "SWAP2"
    },
    "2370": {
      "op": "SWAP1"
    },
    "2371": {
      "op": "POP"
    },
    "2372": {
      "jump": "o",
      "op": "JUMP"
    },
    "2373": {
      "op": "JUMPDEST"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2378": {
      "op": "DUP3"
    },
    "2379": {
      "op": "DUP5"
    },
    "2380": {
      "op": "SUB"
    },
    "2381": {
      "op": "SLT"
    },
    "2382": {
      "op": "ISZERO"
    },
    "2383": {
      "op": "PUSH2",
      "value": "0x957"
    },
    "2386": {
      "op": "JUMPI"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2389": {
      "op": "DUP1"
    },
    "2390": {
      "op": "REVERT"
    },
    "2391": {
      "op": "JUMPDEST"
    },
    "2392": {
      "op": "PUSH2",
      "value": "0x960"
    },
    "2395": {
      "op": "DUP3"
    },
    "2396": {
      "op": "PUSH2",
      "value": "0x8B3"
    },
    "2399": {
      "jump": "i",
      "op": "JUMP"
    },
    "2400": {
      "op": "JUMPDEST"
    },
    "2401": {
      "op": "SWAP4"
    },
    "2402": {
      "op": "SWAP3"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "op": "POP"
    },
    "2405": {
      "op": "POP"
    },
    "2406": {
      "jump": "o",
      "op": "JUMP"
    },
    "2407": {
      "op": "JUMPDEST"
    },
    "2408": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2415": {
      "op": "SHL"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2418": {
      "op": "MSTORE"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2423": {
      "op": "MSTORE"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2428": {
      "op": "REVERT"
    },
    "2429": {
      "op": "JUMPDEST"
    },
    "2430": {
      "op": "DUP1"
    },
    "2431": {
      "op": "DUP3"
    },
    "2432": {
      "op": "MUL"
    },
    "2433": {
      "op": "DUP2"
    },
    "2434": {
      "op": "ISZERO"
    },
    "2435": {
      "op": "DUP3"
    },
    "2436": {
      "op": "DUP3"
    },
    "2437": {
      "op": "DIV"
    },
    "2438": {
      "op": "DUP5"
    },
    "2439": {
      "op": "EQ"
    },
    "2440": {
      "op": "OR"
    },
    "2441": {
      "op": "PUSH2",
      "value": "0x994"
    },
    "2444": {
      "op": "JUMPI"
    },
    "2445": {
      "op": "PUSH2",
      "value": "0x994"
    },
    "2448": {
      "op": "PUSH2",
      "value": "0x967"
    },
    "2451": {
      "jump": "i",
      "op": "JUMP"
    },
    "2452": {
      "op": "JUMPDEST"
    },
    "2453": {
      "op": "SWAP3"
    },
    "2454": {
      "op": "SWAP2"
    },
    "2455": {
      "op": "POP"
    },
    "2456": {
      "op": "POP"
    },
    "2457": {
      "jump": "o",
      "op": "JUMP"
    },
    "2458": {
      "op": "JUMPDEST"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2461": {
      "op": "DUP3"
    },
    "2462": {
      "op": "PUSH2",
      "value": "0x9B7"
    },
    "2465": {
      "op": "JUMPI"
    },
    "2466": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2473": {
      "op": "SHL"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2476": {
      "op": "MSTORE"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2481": {
      "op": "MSTORE"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2486": {
      "op": "REVERT"
    },
    "2487": {
      "op": "JUMPDEST"
    },
    "2488": {
      "op": "POP"
    },
    "2489": {
      "op": "DIV"
    },
    "2490": {
      "op": "SWAP1"
    },
    "2491": {
      "jump": "o",
      "op": "JUMP"
    },
    "2492": {
      "op": "JUMPDEST"
    },
    "2493": {
      "op": "DUP2"
    },
    "2494": {
      "op": "DUP2"
    },
    "2495": {
      "op": "SUB"
    },
    "2496": {
      "op": "DUP2"
    },
    "2497": {
      "op": "DUP2"
    },
    "2498": {
      "op": "GT"
    },
    "2499": {
      "op": "ISZERO"
    },
    "2500": {
      "op": "PUSH2",
      "value": "0x994"
    },
    "2503": {
      "op": "JUMPI"
    },
    "2504": {
      "op": "PUSH2",
      "value": "0x994"
    },
    "2507": {
      "op": "PUSH2",
      "value": "0x967"
    },
    "2510": {
      "jump": "i",
      "op": "JUMP"
    },
    "2511": {
      "op": "JUMPDEST"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2514": {
      "op": "DUP1"
    },
    "2515": {
      "op": "DUP3"
    },
    "2516": {
      "op": "MSTORE"
    },
    "2517": {
      "op": "DUP2"
    },
    "2518": {
      "op": "DUP2"
    },
    "2519": {
      "op": "ADD"
    },
    "2520": {
      "op": "MSTORE"
    },
    "2521": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2556": {
      "op": "DUP3"
    },
    "2557": {
      "op": "ADD"
    },
    "2558": {
      "op": "MSTORE"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2561": {
      "op": "ADD"
    },
    "2562": {
      "op": "SWAP1"
    },
    "2563": {
      "jump": "o",
      "op": "JUMP"
    },
    "2564": {
      "op": "JUMPDEST"
    },
    "2565": {
      "op": "DUP1"
    },
    "2566": {
      "op": "DUP3"
    },
    "2567": {
      "op": "ADD"
    },
    "2568": {
      "op": "DUP1"
    },
    "2569": {
      "op": "DUP3"
    },
    "2570": {
      "op": "GT"
    },
    "2571": {
      "op": "ISZERO"
    },
    "2572": {
      "op": "PUSH2",
      "value": "0x994"
    },
    "2575": {
      "op": "JUMPI"
    },
    "2576": {
      "op": "PUSH2",
      "value": "0x994"
    },
    "2579": {
      "op": "PUSH2",
      "value": "0x967"
    },
    "2582": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "0ca596d93f05965cea93bac8ba84ca10bc610505",
  "source": "// SPDX-License-Identifier: MIT\n\n    pragma solidity ^0.8.0;\n\n    import '@openzeppelin/contracts/utils/Address.sol';\n    import '@openzeppelin/contracts/access/Ownable.sol';\n    import '@openzeppelin/contracts/security/ReentrancyGuard.sol';\n\n    contract NFTInfo is Ownable, ReentrancyGuard {\n\n    mapping(address => mapping (address => uint256)) public ownerToContractAddressToTokenId;\n    mapping (address => uint256) public userTotalNftStolen;\n    mapping(address => mapping(address => mapping(uint256 => uint256))) trackingFeesPaid;\n    event NFTReported(address contractAddress, uint256 tokenId);\n    event claimRemoved(address contractAddress, uint256 tokenId);\n\n\n    uint256 public reportingCost;\n\n    struct NftDetails {\n        address contractAddress;\n        uint256 tokenId;\n    }\n\n    mapping (address => NftDetails[]) public victimToAssets;\n\n    NftDetails[] public NftDetailsArray;\n\n    function addNFTInfo(address _contractAddress, uint256 _TokenID) public payable {\n        require(msg.value >= reportingCost, 'Insufficient funds!');\n        trackingFeesPaid[msg.sender][_contractAddress][_TokenID] = msg.value;\n        ownerToContractAddressToTokenId[msg.sender][_contractAddress] = _TokenID;\n\n        victimToAssets[msg.sender].push(NftDetails(_contractAddress, _TokenID));\n\n        userTotalNftStolen[msg.sender] = userTotalNftStolen[msg.sender] + 1;\n\n        NftDetailsArray.push(NftDetails(_contractAddress, _TokenID));\n        emit NFTReported(_contractAddress, _TokenID);\n\n    }\n\n\n    function removeClaim(address _contractAddress, uint256 _TokenID) public nonReentrant {\n        require(ownerToContractAddressToTokenId[msg.sender][_contractAddress] == _TokenID, \"No reported NFTs\");\n        uint256 balance = trackingFeesPaid[msg.sender][_contractAddress][_TokenID] * 90 / 100;\n        trackingFeesPaid[msg.sender][_contractAddress][_TokenID] = 0;\n        address payable recipient = payable(msg.sender);\n        Address.sendValue(recipient, balance);\n        userTotalNftStolen[msg.sender] = userTotalNftStolen[msg.sender] - 1;\n        emit claimRemoved(_contractAddress, _TokenID);\n    }\n\n    function setCost(uint256 _cost) public onlyOwner {\n        reportingCost = _cost;\n    }\n\n\n}",
  "sourceMap": "247:1965:4:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;719:10:3;921:18:0;:32::i;:::-;1701:1:1;1806:22;;247:1965:4;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;247:1965:4:-;;;;;;;",
  "sourcePath": "contracts/NFTinfo.sol",
  "type": "contract"
}